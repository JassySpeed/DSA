/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */



class Solution {
public:

ListNode* create(vector<int> ans, int index, int size)
{
    if(index==size)
    return NULL;

    ListNode *temp=new ListNode(ans[index]);
    temp->next=create(ans,index+1,size);

    return temp;
}

    ListNode* mergeKLists(vector<ListNode*>& lists) {
        ListNode *temp;

        int n=lists.size();
        vector<int> ans;
        for(int i=0;i<n;i++)
        {
            temp=lists[i];
            while(temp)
            {
                ans.push_back(temp->val);
                temp=temp->next;
            }
        }

        sort(ans.begin(),ans.end());

        return create(ans,0,ans.size());
    }
};
