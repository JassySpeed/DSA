class Solution {
  public:
    vector<int> spirallyTraverse(vector<vector<int> > &matrix) {
        
       int n=matrix.size();
       int m=matrix[0].size();
       
       vector<int> ans;
       
       int top=0;
       int bottom=n-1;
       int left=0;
       int right=m-1;
       
       while(top<=bottom && left<=right)
       {
           for(int i=left;i<=right;i++)
           ans.push_back(matrix[top][i]);
           top++;
           
           for(int j=top;j<=bottom;j++)
           ans.push_back(matrix[j][right]);
           right--;
           
           if(top<=bottom)
           {
               for(int j=right;j>=left;j--)
               ans.push_back(matrix[bottom][j]);
               bottom--;
           }
           
           if(left<=right)
           {
               for(int i=bottom;i>=top;i--)
               ans.push_back(matrix[i][left]);
               left++;
           }
       }
       return ans;
    }
};
